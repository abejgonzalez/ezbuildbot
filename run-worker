#!/bin/bash
# Re-run a worker instance from the worker image.
set -ex
set -euo pipefail

# Get script dir since the script could be executed in many different places.
SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"
source $SCRIPT_DIR/defaults.sh

if [ -z "${1-}" ]; then
  echo "Usage: $0 [worker-name] [worker-password]" >&2
  echo "Try $0 exampleworker password123456" >&2
  exit 1
fi

WORKER_NAME="$1"
WORKER_PASSWORD="$2"

# Worker instance name
inst_name="${PROJ_PREFIX}-worker-inst-${WORKER_NAME}"

# Terminate any previous running instance.
docker rm "$inst_name" --force || true

# These are settings defined by the base buildbot image.
# Docker settings are set up for host networking by default.
# BUILDMASTER: the dns or IP address of the master to connect to
# BUILDMASTER_PORT: the port of the worker protocol
# WORKERNAME: the name of the worker as declared in the master configuration
# WORKERPASS: worker password

# Pass SSH through if specified. If not, don't use this option.
if [ -z "${BB_SSH_PASSTHROUGH}" ]; then
  ssh_options=()
else
  ssh_options=( "-v" "${BB_SSH_PASSTHROUGH}:/home/buildbot/.ssh:ro" )
fi

echo "-v ${BB_SHARE_LOCAL_DIR}:${BB_SHARE_DOCKER_DIR} "

docker run \
  --name "$inst_name" \
  -it \
  --network host \
  -v ${BB_SHARE_LOCAL_DIR}:${BB_SHARE_DOCKER_DIR} \
  -e "BUILDMASTER=localhost" \
  -e "BUILDMASTER_PORT=${BB_COMMS_PORT}" \
  -e "BB_SHARE_DOCKER_DIR=${BB_SHARE_DOCKER_DIR}" \
  -e "WORKERNAME=${WORKER_NAME}" \
  -e "WORKERPASS=${WORKER_PASSWORD}" \
  -d \
  "${ssh_options[@]}" \
  "${PROJ_PREFIX}-worker"
